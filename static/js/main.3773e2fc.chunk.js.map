{"version":3,"sources":["components/shippingForms/shippingSteps/ShippingSteps.jsx","types.js","actions/shipping.js","utils/useFormInput.js","components/shippingForms/ShippingUserInfo.jsx","utils/useUserShippingInfoStep.js","components/shippingForms/ShippingType.jsx","components/shippingForms/DeliveryInfo.jsx","utils/useDeliveryInfo.js","components/ShippingContainer.jsx","App.js","rootReducer.js","reducers/shippingInfo.js","serviceWorker.js","index.js"],"names":["ShippingSteps","step","Step","Group","active","disabled","Icon","name","Content","Title","Description","SAVE_SHIPPING_USER_INFO","SAVE_DELIVERY_INFO","SUCCESS_SAVE_DELIVERY_INFO","FAILED_SAVE_DELIVERY_INFO","CHANGE_MODAL_STATE","saveUserInfoShippingStep","userData","type","useFormInput","initialValue","validatorType","options","message","dateField","useState","value","setValue","error","setError","handleChange","event","data","optionsValue","target","validator","String","onChange","onClear","ShippingUserInfo","userShippingInfo","useSelector","state","shippingData","dispatch","useDispatch","min","max","content","pointig","surename","email","phone","strictMode","useUserShippingInfoStep","Segment","stacked","Form","widths","Input","required","label","fluid","icon","iconPosition","placeholder","Button","color","onClick","ShippingType","shippingType","setShippingType","handleChengeShippingType","_","inline","Radio","radio","checked","handleBack","countryOptions","key","flag","text","validateFields","country","city","postcode","address","date","DeliveryInfo","shippingInfo","deliveryInfo","comment","useDeliveryInfo","useEffect","success","id","setTimeout","document","location","reload","clearTimeout","Dropdown","search","selection","Field","localization","animation","hideMobileKeyboard","clearable","closable","prepareFormByShippingType","TextArea","style","minHeight","sendingDeliveryData","loading","deliveryData","preparedData","axios","method","url","headers","then","result","successData","showModal","catch","Modal","open","onClose","Header","image","Image","wrapped","size","src","gridColumnStyle","maxWidth","ShippingContainer","className","Grid","textAlign","height","verticalAlign","Column","App","combineReducers","action","Boolean","window","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3773e2fc.chunk.js","sourcesContent":["import React from 'react';\nimport { string } from 'prop-types';\nimport { Icon, Step } from 'semantic-ui-react';\n\nexport const ShippingSteps = ({ step }) => (\n\t<Step.Group>\n\t\t<Step active={step === 'user'} disabled={step !== 'user'}>\n\t\t\t<Icon name=\"user\" />\n\t\t\t<Step.Content>\n\t\t\t\t<Step.Title>Основные данные</Step.Title>\n\t\t\t\t<Step.Description>Основные данные о получателе</Step.Description>\n\t\t\t</Step.Content>\n\t\t</Step>\n\n\t\t<Step active={step === 'addressInfo'} disabled={step !== 'addressInfo'}>\n\t\t\t<Icon name=\"shipping fast\" />\n\t\t\t<Step.Content>\n\t\t\t\t<Step.Title>Адрес доставки</Step.Title>\n\t\t\t\t<Step.Description>Выбрать вариант доставки</Step.Description>\n\t\t\t</Step.Content>\n\t\t</Step>\n\n\t\t{/* <Step active={step === 'confirm'} disabled={step !== 'confirm'}>\n\t\t\t<Icon name=\"info\" />\n\t\t\t<Step.Content>\n\t\t\t\t<Step.Title>Подтверждение заказа</Step.Title>\n\t\t\t</Step.Content>\n\t\t</Step> */}\n\t</Step.Group>\n);\n\nShippingSteps.propTypes = {\n\tstep: string.isRequired\n};\n","export const SAVE_SHIPPING_USER_INFO = 'SAVE_SHIPPING_USER_INFO';\nexport const SAVE_DELIVERY_INFO = 'SAVE_DELIVERY_INFO';\nexport const SUCCESS_SAVE_DELIVERY_INFO = 'SUCCESS_SAVE_DELIVERY_INFO';\nexport const FAILED_SAVE_DELIVERY_INFO = 'FAILED_SAVE_DELIVERY_INFO';\nexport const CHANGE_MODAL_STATE = 'CHANGE_MODAL_STATE';\n","import axios from 'axios';\nimport {\n\tSAVE_SHIPPING_USER_INFO,\n\tSAVE_DELIVERY_INFO,\n\tSUCCESS_SAVE_DELIVERY_INFO,\n\tFAILED_SAVE_DELIVERY_INFO,\n\tCHANGE_MODAL_STATE\n} from '../types';\n\nconst API_PATH = 'http://ladux.ru/test.php';\n\nexport const saveUserInfoShippingStep = userData => ({\n\ttype: SAVE_SHIPPING_USER_INFO,\n\tuserData\n});\n\nexport const saveDeliveryInfoStep = deliveryData => dispatch => {\n\tdispatch({\n\t\ttype: SAVE_DELIVERY_INFO,\n\t\tdeliveryData: { ...deliveryData, sendingDeliveryData: true }\n\t});\n\taxios({\n\t\tmethod: 'post',\n\t\turl: `${API_PATH}`,\n\t\theaders: { 'Content-Type': 'application/json;' },\n\t\tdata: deliveryData\n\t})\n\t\t.then(result => {\n\t\t\tdispatch({\n\t\t\t\ttype: SUCCESS_SAVE_DELIVERY_INFO,\n\t\t\t\tsuccessData: { sendingDeliveryData: false, showModal: true, success: result.data.success }\n\t\t\t});\n\t\t})\n\t\t.catch(() => dispatch({\n\t\t\ttype: FAILED_SAVE_DELIVERY_INFO,\n\t\t\tsuccessData: { sendingDeliveryData: false, showModal: true, success: false }\n\t\t}));\n};\n\nexport const changeModalState = showModal => ({\n\ttype: CHANGE_MODAL_STATE,\n\tshowModal\n});\n","import { useState } from 'react';\nimport validator from 'validator';\n\nexport const useFormInput = ({\n\tinitialValue = '', validatorType = null, options = [], message = {}, dateField = false\n}) => {\n\tconst [value, setValue] = useState(initialValue);\n\tconst [error, setError] = useState(false);\n\n\tconst validate = data => {\n\t\tif (validatorType === 'isMobilePhone' || validatorType === 'isPostalCode') {\n\t\t\tif (!validator[validatorType](String(data), 'any', options))\n\t\t\t\tsetError(message);\n\t\t\telse\n\t\t\t\tsetError(false);\n\t\t}\n\t\telse if (!validator[validatorType](String(data), options))\n\t\t\tsetError(message);\n\t\telse\n\t\t\tsetError(false);\n\t};\n\n\tconst handleChange = (event, { value: optionsValue }) => {\n\t\tif (validatorType)\n\t\t\tvalidate(event.target.value);\n\t\tif (optionsValue)\n\t\t\tsetValue(optionsValue);\n\t\telse\n\t\t\tsetValue(event.target.value);\n\t};\n\treturn dateField ? {\n\t\tvalue,\n\t\tonChange: handleChange,\n\t\terror,\n\t\tonClear: () => setValue('')\n\t} : {\n\t\tvalue,\n\t\tonChange: handleChange,\n\t\terror\n\t};\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n\tButton, Form, Segment\n} from 'semantic-ui-react';\nimport { saveUserInfoShippingStep } from '../../actions/shipping';\nimport { useUserShippingInfoStep } from '../../utils/useUserShippingInfoStep';\n\nexport const ShippingUserInfo = () => {\n\tconst userShippingInfo = useSelector(state => state.shippingData);\n\tconst dispatch = useDispatch();\n\tconst {\n\t\tname,\n\t\tsurename,\n\t\temail,\n\t\tphone\n\t} = useUserShippingInfoStep(userShippingInfo);\n\tconst hadleSaveUserShippingInfo = () => {\n\t\tdispatch(saveUserInfoShippingStep({\n\t\t\tname: name.value,\n\t\t\tsurename: surename.value,\n\t\t\temail: email.value,\n\t\t\tphone: phone.value,\n\t\t\tstep: 'addressInfo'\n\t\t}));\n\t};\n\treturn (\n\t\t<Segment stacked>\n\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t<Form.Input\n\t\t\t\t\t{...name}\n\t\t\t\t\trequired\n\t\t\t\t\tlabel=\"Имя\"\n\t\t\t\t\tfluid\n\t\t\t\t\ticon=\"user\"\n\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\tplaceholder=\"Иван\"\n\t\t\t\t/>\n\t\t\t\t<Form.Input\n\t\t\t\t\t{...surename}\n\t\t\t\t\trequired\n\t\t\t\t\tlabel=\"Фамилия\"\n\t\t\t\t\tfluid\n\t\t\t\t\ticon=\"user\"\n\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\tplaceholder=\"Иванов\"\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t<Form.Input {...phone} required label=\"Телефон\" fluid icon=\"phone\" iconPosition=\"left\" placeholder=\"+79101234567\" />\n\t\t\t<Form.Input {...email} required label=\"Email\" fluid icon=\"mail\" iconPosition=\"left\" placeholder=\"test@test.com\" />\n\t\t\t<Button\n\t\t\t\tdisabled={\n\t\t\t\t\t(!!email.error || !email.value)\n\t\t\t\t\t|| (!!phone.error || !phone.value)\n\t\t\t\t\t|| (!!name.error || !name.value)\n\t\t\t\t\t|| (!!surename.error || !surename.value)\n\t\t\t\t}\n\t\t\t\tcolor=\"teal\"\n\t\t\t\tonClick={hadleSaveUserShippingInfo}\n\t\t\t>\n\t\t\t\tДалее\n\t\t\t</Button>\n\t\t</Segment>\n\t);\n};\n","import { useFormInput } from './useFormInput';\n\nconst pointig = 'below';\n\nexport const useUserShippingInfoStep = userShippingInfo => {\n\tconst name = useFormInput({\n\t\tinitialValue: userShippingInfo.name || '', validatorType: 'isLength', options: { min: 1, max: 255 }, message: { content: 'Имя не должна быть пустым и превышать 255 символов', pointig }\n\t});\n\tconst surename = useFormInput({\n\t\tinitialValue: userShippingInfo.surename || '', validatorType: 'isLength', options: { min: 1, max: 255 }, message: { content: 'Фамилия не должна быть пустой и превышать 255 символов', pointig }\n\t});\n\tconst email = useFormInput({ initialValue: userShippingInfo.email || '', validatorType: 'isEmail', message: { content: 'Некорректный формат Email. Пример: test@test.com', pointig } });\n\tconst phone = useFormInput({\n\t\tinitialValue: userShippingInfo.phone || '',\n\t\tvalidatorType: 'isMobilePhone',\n\t\toptions: { strictMode: true },\n\t\tmessage: { content: 'Телефон должен начинаться с кода страны. Например: +7. И содержать корректное число цифр присущих вашей стране.', pointig }\n\t});\n\n\treturn {\n\t\tname,\n\t\tsurename,\n\t\temail,\n\t\tphone\n\t};\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n\tForm, Segment\n} from 'semantic-ui-react';\nimport { saveUserInfoShippingStep } from '../../actions/shipping';\nimport { DeliveryInfo } from './index';\n\nexport const ShippingType = () => {\n\tconst dispatch = useDispatch();\n\tconst [shippingType, setShippingType] = useState('delivery');\n\tconst handleChengeShippingType = (_, { value }) => setShippingType(value);\n\tconst handleBack = () => dispatch(saveUserInfoShippingStep({\n\t\tstep: 'user'\n\t}));\n\treturn (\n\t\t<Segment stacked>\n\t\t\t<Form.Group inline>\n\t\t\t\t<Form.Radio\n\t\t\t\t\tradio\n\t\t\t\t\tlabel=\"Доставка\"\n\t\t\t\t\tname=\"delivery\"\n\t\t\t\t\tvalue=\"delivery\"\n\t\t\t\t\tchecked={shippingType === 'delivery'}\n\t\t\t\t\tonChange={handleChengeShippingType}\n\t\t\t\t/>\n\t\t\t\t<Form.Radio\n\t\t\t\t\tradio\n\t\t\t\t\tlabel=\"Самовывоз\"\n\t\t\t\t\tname=\"pickup\"\n\t\t\t\t\tvalue=\"pickup\"\n\t\t\t\t\tchecked={shippingType === 'pickup'}\n\t\t\t\t\tonChange={handleChengeShippingType}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t<DeliveryInfo shippingType={shippingType} handleBack={handleBack} />\n\t\t</Segment>\n\t);\n};\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { string, func } from 'prop-types';\nimport {\n\tButton, Form, Header, Image, Modal\n} from 'semantic-ui-react';\nimport {\n\tDateInput\n} from 'semantic-ui-calendar-react';\nimport 'moment/locale/ru';\nimport { saveDeliveryInfoStep, changeModalState } from '../../actions/shipping';\nimport { useDeliveryInfo } from '../../utils/useDeliveryInfo';\n\nconst countryOptions = [\n\t{\n\t\tkey: 'ru', value: 'ru', flag: 'ru', text: 'Россия'\n\t},\n\t{\n\t\tkey: 'us', value: 'us', flag: 'us', text: 'США'\n\t},\n\t{\n\t\tkey: 'uk', value: 'uk', flag: 'uk', text: 'Великобритания'\n\t},\n\t{\n\t\tkey: 'by', value: 'by', flag: 'by', text: 'Беларусь'\n\t}\n];\n\nfunction validateFields({\n\tshippingType = 'delivery', country, city, postcode, address, date\n}) {\n\tif (shippingType === 'delivery') {\n\t\treturn (!country.value || !!country.error)\n\t\t|| (!city.value || !!city.error)\n\t\t|| (!postcode.value || !!postcode.error)\n\t\t|| (!address.value || !!address.error)\n\t\t|| (!date.value || !!date.error);\n\t}\n\treturn false;\n}\n\nfunction prepareFormByShippingType({\n\t// eslint-disable-next-line react/prop-types\n\tshippingType = 'delivery', country, city, postcode, address, date\n}) {\n\tif (shippingType === 'delivery') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t<Form.Dropdown\n\t\t\t\t\t\t{...country}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tlabel=\"Страна\"\n\t\t\t\t\t\tplaceholder=\"Страна\"\n\t\t\t\t\t\tfluid\n\t\t\t\t\t\tsearch\n\t\t\t\t\t\tselection\n\t\t\t\t\t\toptions={countryOptions}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t{...city}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tlabel=\"Город\"\n\t\t\t\t\t\tfluid\n\t\t\t\t\t\tplaceholder=\"Москва\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t{...postcode}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tlabel=\"Индекс\"\n\t\t\t\t\t\tfluid\n\t\t\t\t\t\tplaceholder=\"398000\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Input {...address} required label=\"Адрес\" fluid placeholder=\"ул.Маршала Савицкого, 8\" />\n\t\t\t\t{/* <Label required>Дата</Label> */}\n\t\t\t\t<Form.Field required label=\"Дата\" />\n\t\t\t\t<DateInput\n\t\t\t\t\tname=\"date\"\n\t\t\t\t\tplaceholder=\"Дата доставки\"\n\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\tlocalization=\"ru\"\n\t\t\t\t\tanimation=\"none\"\n\t\t\t\t\thideMobileKeyboard\n\t\t\t\t\tclearable\n\t\t\t\t\tclosable\n\t\t\t\t\t{...date}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn null;\n}\n\nexport const DeliveryInfo = ({ shippingType, handleBack }) => {\n\tconst shippingInfo = useSelector(state => state.shippingData);\n\tconst dispatch = useDispatch();\n\tconst deliveryInfo = useDeliveryInfo(shippingInfo);\n\n\tconst handleCloseModal = () => dispatch(changeModalState(!shippingInfo.showModal));\n\n\tuseEffect(() => {\n\t\tif (shippingInfo.success) {\n\t\t\tconst id = setTimeout(() => document.location.reload(true), 4000);\n\t\t\treturn () => clearTimeout(id);\n\t\t}\n\t}, [shippingInfo.success]);\n\n\tconst hadleSaveUserShippingInfo = () => {\n\t\tconst preparedData = shippingType === 'delivery' ? {\n\t\t\tcountry: deliveryInfo.country.value,\n\t\t\tcity: deliveryInfo.city.value,\n\t\t\tpostcode: deliveryInfo.postcode.value,\n\t\t\taddress: deliveryInfo.address.value,\n\t\t\tdate: deliveryInfo.date.value,\n\t\t\tcomment: deliveryInfo.comment.value,\n\t\t\t...shippingInfo\n\t\t} : { ...shippingInfo, comment: deliveryInfo.comment.value };\n\t\tdispatch(saveDeliveryInfoStep(preparedData));\n\t};\n\treturn (\n\t\t<>\n\t\t\t{prepareFormByShippingType({ shippingType, ...deliveryInfo })}\n\t\t\t<Form.TextArea {...deliveryInfo.comment} placeholder=\"Ваш комментарий здесь...\" label=\"Комментарий к заказу\" style={{ minHeight: 100 }} />\n\t\t\t<Button\n\t\t\t\tcolor=\"teal\"\n\t\t\t\tdisabled={\n\t\t\t\t\tshippingInfo.sendingDeliveryData || false\n\t\t\t\t}\n\t\t\t\tonClick={handleBack}\n\t\t\t>\n\t\t\t\tНазад\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tdisabled={\n\t\t\t\t\tvalidateFields({ shippingType, ...deliveryInfo })\n\t\t\t\t\t|| shippingInfo.sendingDeliveryData\n\t\t\t\t}\n\t\t\t\tcolor=\"teal\"\n\t\t\t\tloading={shippingInfo.sendingDeliveryData || false}\n\t\t\t\tonClick={hadleSaveUserShippingInfo}\n\t\t\t>\n\t\t\t\tОформить заказ\n\t\t\t</Button>\n\t\t\t<Modal open={shippingInfo.showModal || false} onClose={!shippingInfo.success ? handleCloseModal : () => {}}>\n\t\t\t\t<Modal.Header>Оформление доставки</Modal.Header>\n\t\t\t\t<Modal.Content image>\n\t\t\t\t\t<Image wrapped size=\"medium\" src=\"https://react.semantic-ui.com/images/avatar/large/rachel.png\" />\n\t\t\t\t\t<Modal.Description>\n\t\t\t\t\t\t{shippingInfo.success ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Header>\n\t\t\t\t\t\t\t\t\tОформление доставки успешно зарегистрировано\n\t\t\t\t\t\t\t\t\tи передано в распределительный цетр нашему оператору.\n\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t<p>Данное уведомление автоматически закроется через 4 секунды</p>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Header>\n\t\t\t\t\t\t\t\t\tВо время оформления доставки возникла непредвиденная проблема.\n\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t<p>Пожалуйста, закройте модальное окно и повторите отправку.</p>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Modal.Description>\n\t\t\t\t</Modal.Content>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nDeliveryInfo.propTypes = {\n\tshippingType: string.isRequired,\n\thandleBack: func.isRequired\n};\n","import { useFormInput } from './useFormInput';\n\nconst pointig = 'below';\n\nexport const useDeliveryInfo = deliveryInfo => {\n\tconst country = useFormInput({\n\t\tinitialValue: deliveryInfo.country || ''\n\t});\n\tconst city = useFormInput({\n\t\tinitialValue: deliveryInfo.city || '', validatorType: 'isLength', options: { min: 1, max: 255 }, message: { content: 'Город не должн быть пустой строкой и превышать 255 символов', pointig }\n\t});\n\tconst postcode = useFormInput({ initialValue: deliveryInfo.postcode || '', validatorType: 'isPostalCode', message: { content: 'Некорректный формат почтового индекса. Пример: 398000', pointig } });\n\tconst address = useFormInput({\n\t\tinitialValue: deliveryInfo.address || '',\n\t\tvalidatorType: 'isLength',\n\t\toptions: { min: 1, max: 255 },\n\t\tmessage: { content: 'Адрес не может быть пустой строкой и быть длиннее 255 символов', pointig }\n\t});\n\tconst date = useFormInput({\n\t\tinitialValue: deliveryInfo.date || '',\n\t\tdateField: true\n\t});\n\tconst comment = useFormInput({\n\t\tinitialValue: deliveryInfo.date || ''\n\t});\n\n\treturn {\n\t\tcountry,\n\t\tcity,\n\t\tpostcode,\n\t\taddress,\n\t\tdate,\n\t\tcomment\n\t};\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n\tForm, Grid\n} from 'semantic-ui-react';\nimport { ShippingUserInfo, ShippingSteps, ShippingType } from './shippingForms/index';\n\nconst gridColumnStyle = { maxWidth: 1000 };\n\nexport const ShippingContainer = () => {\n\tconst shippingInfo = useSelector(state => state.shippingData);\n\treturn (\n\t\t<div className=\"ui container\">\n\t\t\t<Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n\t\t\t\t<Grid.Column style={gridColumnStyle}>\n\t\t\t\t\t<Form size=\"large\">\n\t\t\t\t\t\t<ShippingSteps step={shippingInfo.step} />\n\t\t\t\t\t\t{shippingInfo.step === 'user' && <ShippingUserInfo />}\n\t\t\t\t\t\t{shippingInfo.step === 'addressInfo' && <ShippingType />}\n\t\t\t\t\t</Form>\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { ShippingContainer } from './components/ShippingContainer';\n\nconst App = () => <ShippingContainer />\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport shippingData from './reducers/shippingInfo';\n\nexport default combineReducers({\n\tshippingData\n});\n","import {\n\tSAVE_SHIPPING_USER_INFO,\n\tSAVE_DELIVERY_INFO,\n\tSUCCESS_SAVE_DELIVERY_INFO,\n\tFAILED_SAVE_DELIVERY_INFO,\n\tCHANGE_MODAL_STATE\n} from '../types';\n\nexport default function shippingInfo(state = { step: 'user' }, action) {\n\tswitch (action.type) {\n\t\tcase SAVE_SHIPPING_USER_INFO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.userData\n\t\t\t};\n\t\tcase SAVE_DELIVERY_INFO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.deliveryData\n\t\t\t};\n\t\tcase SUCCESS_SAVE_DELIVERY_INFO:\n\t\tcase FAILED_SAVE_DELIVERY_INFO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.successData\n\t\t\t};\n\t\tcase CHANGE_MODAL_STATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tshowModal: action.showModal\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport rootReducer from './rootReducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}